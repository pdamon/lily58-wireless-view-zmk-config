/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41>;
            flavor = "balanced";
            require-prior-idle-ms = <400>;
            quick-tap-ms = <200>;
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 35 44 45 46 47 48 11 23>;
            flavor = "balanced";
            require-prior-idle-ms = <400>;
            quick-tap-ms = <200>;
        };

        hrm_rshift: hrm_rshift {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        hrm_lshift: hrm_lshift {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 35 44 45 46 47 48 23 11>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        hrm_right_long: hrm_right_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT_LONG";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <400>;
            quick-tap-ms = <200>;
        };

        hrm_left_long: hrm_left_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_LONG";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 35 44 45 46 47 48 11 23>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <400>;
            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <28 26>;
            layers = <0 1>;
            require-prior-idle-ms = <250>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <28 27>;
            layers = <0 3 2 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <31 32>;
            layers = <0 2 3 1>;
        };

        lock_screen {
            bindings = <&lock_screen>;
            key-positions = <1 0>;
            require-prior-idle-ms = <250>;
            layers = <0 1>;
        };

        comment {
            bindings = <&ctrl_fslh>;
            key-positions = <31 33>;
            layers = <0 3 2 1>;
        };

        to_colemak {
            bindings = <&to 1>;
            key-positions = <0 11>;
            layers = <0>;
        };

        to_qwerty {
            bindings = <&to 0>;
            key-positions = <0 11>;
            layers = <1>;
        };
    };

    macros {
        lock_screen: lock_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
            label = "LOCK_SCREEN";
        };

        ctrl_fslh: ctrl_fslh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(FSLH)>;
            label = "CTRL_FSLH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwerty {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Qwerty";
            bindings = <
&kp ESCAPE  &kp N1                 &kp N2            &kp N3             &kp N4               &kp N5                        &kp N6  &kp N7               &kp N8              &kp N9             &kp N0                     &kp EQUAL
&kp TAB     &kp Q                  &kp W             &kp E              &kp R                &kp T                         &kp Y   &kp U                &kp I               &kp O              &kp P                      &kp BACKSLASH
&kp LCTRL   &hrm_left_long LWIN A  &hrm_left LALT S  &hrm_left LCTRL D  &hrm_lshift LSHFT F  &kp G                         &kp H   &hrm_rshift RSHFT J  &hrm_right RCTRL K  &hrm_right RALT L  &hrm_right_long RGUI SEMI  &kp SINGLE_QUOTE
&kp LSHFT   &kp Z                  &kp X             &kp C              &kp V                &kp B   &mo 4      &mo 2      &kp N   &kp M                &kp COMMA           &kp DOT            &kp FSLH                   &kp RSHFT
                                                     &kp LGUI           &kp BSPC             &mo 2   &kp RET    &kp SPACE  &mo 3   &kp DEL              &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Colemak {
            display-name = "Colemak";
            bindings = <
&kp ESC    &kp N1                 &kp N2            &kp N3             &kp N4               &kp N5                        &kp N6  &kp N7               &kp N8              &kp N9             &kp N0                  &trans
&kp TAB    &kp Q                  &kp W             &kp F              &kp P                &kp B                         &kp J   &kp L                &kp U               &kp Y              &trans                  &trans
&kp LCTRL  &hrm_left_long LGUI A  &hrm_left LALT R  &hrm_left LCTRL S  &hrm_lshift LSHFT T  &kp G                         &kp K   &hrm_rshift RSHFT N  &hrm_right RCTRL E  &hrm_right RALT I  &hrm_right_long RGUI O  &trans
&kp LSHFT  &kp Z                  &kp X             &kp C              &kp D                &kp V   &mo 4      &mo 2      &kp M   &kp H                &kp COMMA           &kp DOT            &trans                  &kp RSHFT
                                                    &kp LGUI           &kp BSPC             &mo 2   &kp RET    &kp SPACE  &mo 3   &kp DEL              &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NavSym {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "NavSym";
            bindings = <
&kp C_MUTE  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP                         &kp F7     &kp F8     &kp F9        &kp F10    &kp F11          &kp F12
&trans      &trans      &kp BSLH          &kp PIPE    &kp LBKT      &kp RBKT                             &kp PG_UP  &kp CARET  &kp UP_ARROW  &kp DLLR   &kp PAUSE_BREAK  &trans
&trans      &kp DQT     &kp GRAVE         &kp QMARK   &kp LPAR      &kp RPAR                             &kp PG_DN  &kp LEFT   &kp DOWN      &kp RIGHT  &kp LC(Y)        &kp INS
&trans      &trans      &trans            &trans      &kp LBRC      &kp RIGHT_BRACE  &trans    &trans    &kp TILDE  &kp HOME   &kp END       &kp PSCRN  &kp CAPS         &trans
                                          &trans      &trans        &trans           &trans    &kp FSLH  &kp SQT    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Numbers {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Numbers";
            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4    &kp F5    &kp F6                          &kp F7     &kp F8    &kp F9     &kp F10    &kp F11  &kp F12
&trans  &trans     &kp COLON  &kp HASH  &kp SEMI  &kp AMPS                        &trans     &kp FSLH  &kp PLUS   &kp MINUS  &trans   &trans
&trans  &kp N4     &kp N3     &kp N2    &kp N1    &kp N5                          &kp N9     &kp N0    &kp N6     &kp N7     &kp N8   &trans
&trans  &kp TILDE  &kp LT     &kp GT    &kp EXCL  &kp AT     &trans       &trans  &kp PRCNT  &kp STAR  &kp COMMA  &kp DOT    &trans   &trans
                              &trans    &trans    &kp UNDER  &kp EQUAL    &trans  &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Bluetooth {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR_ALL
&trans      &trans        &trans        &trans        &trans        &trans                          &trans         &trans         &trans         &trans         &trans         &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans         &trans         &trans         &trans         &trans         &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans         &trans         &trans         &trans         &trans         &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans         &trans         &trans
            >;

            label = "Bluetooth";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
