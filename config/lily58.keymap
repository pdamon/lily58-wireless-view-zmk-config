/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <42 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp ESC    &kp N1         &kp N2  &kp N3        &kp N4    &kp N5                          &kp N6  &kp N7   &kp N8        &kp N9   &kp N0            &kp GRAVE
&kp TAB    &kp Q          &kp W   &kp E         &kp R     &kp T                           &kp Y   &kp U    &kp I         &kp O    &kp P             &kp BACKSLASH
&kp LCTRL  &hml LSHIFT A  &kp S   &kp D         &kp F     &kp G                           &kp H   &kp J    &kp K         &kp L    &hmr RSHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z          &kp X   &kp C         &kp V     &kp B   &kp LPAR     &kp RPAR   &kp N   &kp M    &kp COMMA     &kp DOT  &kp FSLH          &kp RSHFT
                                  &kp LEFT_GUI  &kp BSPC  &mo 1   &kp ENTER    &kp SPACE  &mo 2   &kp DEL  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Lower";
            bindings = <
&kp K_MUTE  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                                         &trans        &trans    &trans     &trans    &trans  &trans
&trans      &kp EXCL      &kp AT            &kp HASH      &kp DLLR           &kp PRCNT                                               &kp CARET     &kp AMPS  &kp STAR   &kp FSLH  &trans  &trans
&trans      &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4       &kp N5                                                  &kp NUMBER_6  &kp N7    &kp N8     &kp N9    &kp N0  &trans
&trans      &trans        &trans            &trans        &trans             &trans           &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp COLON     &kp PLUS  &kp MINUS  &kp DOT   &trans  &trans
                                            &trans        &trans             &trans           &trans              &kp EQUAL          &trans        &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Raise";
            bindings = <
&kp F1    &kp F2  &kp F3      &kp F4     &kp F5     &kp F6                                     &kp F7  &kp F8    &kp F9        &kp F10    &kp F11  &kp F12
&trans    &trans  &trans      &kp TILDE  &kp GRAVE  &trans                                     &trans  &trans    &kp UP_ARROW  &trans     &trans   &trans
&kp CAPS  &trans  &kp ESCAPE  &kp TAB    &kp UNDER  &trans                                     &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans   &trans
&trans    &trans  &trans      &kp BSLH   &kp PIPE   &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE  &trans  &trans    &trans        &trans     &trans   &trans
                              &trans     &trans     &trans  &trans            &trans           &trans  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Both {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
